# vim:set ft=dockerfile:
FROM hypriot/rpi-alpine-scratch
MAINTAINER Marcel Grossmann <whatever4711@gmail.com>

# Set env variables used in this Dockerfile (add a unique prefix, such as DOCKYARD)
# Local directory with project source
ENV DOCKYARD_SRC=src
# Directory in container for all project files
ENV DOCKYARD_SRVHOME=/usr/src
# Directory in container for project source files
ENV DOCKYARD_SRVPROJ=/usr/src/Wedding
ENV CERT=/etc/cert

WORKDIR $DOCKYARD_SRVHOME
RUN mkdir media static logs 
VOLUME ["$DOCKYARD_SRVHOME/media/", "$DOCKYARD_SRVHOME/logs/", "$CERT"]

# For DB
#RUN apt-get update && \
#    apt-get -y install --no-install-recommends libpq-dev
# Clean Up
#RUN apt-get clean && \
#    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN apk add --update python3 python3-dev libpq postgresql-dev gcc musl-dev linux-headers

COPY requirements.txt $DOCKYARD_SRVHOME

# Install Python dependencies
RUN pip3 --default-timeout=60 install -r $DOCKYARD_SRVHOME/requirements.txt

# Copy application source code to SRCDIR
COPY $DOCKYARD_SRC $DOCKYARD_SRVPROJ

# Port to expose
EXPOSE 8000

# Copy entrypoint script into the image
WORKDIR $DOCKYARD_SRVPROJ
COPY ./docker-entrypoint.sh /
RUN chmod +x /docker-entrypoint.sh
ENTRYPOINT ["/docker-entrypoint.sh"]
